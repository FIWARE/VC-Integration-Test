keyrock:
  statefulset:
    image:
      repository: quay.io/wi_stefan/keyrock
      tag: sn-fix-2
  service:
    type: LoadBalancer
    port: 5080
  db:
    user: root
    host: mysql
    password: password
  admin:
    user: admin
    email: admin@fiware.org
  host: http://it-keyrock
  route:
    enabled: false
  authorisationRegistry:
    enabled: true
    identifier: "did:key:z6MkigCEnopwujz8Ten2dzq91nvMjqbKQYcifuZhqBsEkH7g"
    url: "internal"
  satellite:
    enabled: true
    identifier: "EU.EORI.FIWARESATELLITE"
    url: "http://it-trusted-issuers-registry"
    tokenEndpoint: "http://it-trusted-issuers-registry/token"
    partiesEndpoint: "http://it-trusted-issuers-registry/parties"
  token:
    enabled: false
  additionalEnvVars:
    - name: IDM_TITLE
      value: "PDC AR"
    - name: IDM_DEBUG
      value: "true"
    - name: DEBUG
      value: "*"
    - name: IDM_DB_NAME
      value: pdc_ar_idm
    - name: IDM_DB_SEED
      value: "true"
    - name: IDM_SERVER_MAX_HEADER_SIZE
      value: "32768"
    - name: IDM_PR_CLIENT_ID
      value: "did:key:z6MksU6tMfbaDzvaRe5oFE4eZTVTV4HJM4fmQWWGsDGQVsEr"
    - name: IDM_PR_CLIENT_KEY
      valueFrom:
        secretKeyRef:
          name: keyrock-ar-sec
          key: key
    - name: IDM_PR_CLIENT_CRT
      valueFrom:
        secretKeyRef:
          name: keyrock-ar-sec
          key: cert
  initData:
    backoffLimit: 50
    initEnabled: true
    image: quay.io/wi_stefan/mysql:5.7
    command:
      - /bin/sh
      - /scripts/create.sh
    volumeMount:
      name: scripts
      mountPath: /scripts
    env:
      - name: DB_PASSWORD
        value: "password"
    scriptData:
      create.sh: |-
        mysql -h mysql -u root -p$DB_PASSWORD pdc_ar_idm <<EOF
        
        -- Static objects
        SET @rules := JSON_ARRAY(
          JSON_OBJECT(
            "effect", "Permit"
          )
        );
        
        SET @subjectProvider := "PROVIDER";
        SET @subjectConsumer := "CONSUMER";
        SET @subjectLear := "LEGAL_REPRESENTATIVE";
        SET @subjectGold := "GOLD_CUSTOMER";
        SET @subjectStandard := "STANDARD_CUSTOMER";
        
        -- Policies Gold
        SET @policiesGold := JSON_ARRAY(
          JSON_OBJECT(
            "rules", CAST(@rules as JSON),
            "target", JSON_OBJECT(
              "actions", JSON_ARRAY("PATCH"),
              "resource", JSON_OBJECT(
                "type", "DELIVERYORDER",
                "attributes", JSON_ARRAY("pta","pda"),
                "identifiers", JSON_ARRAY("*")
              )
            )
          ),
          JSON_OBJECT(
            "rules", CAST(@rules as JSON),
            "target", JSON_OBJECT(
              "actions", JSON_ARRAY("GET"),
              "resource", JSON_OBJECT(
                "type", "DELIVERYORDER",
                "attributes", JSON_ARRAY("*"),
                "identifiers", JSON_ARRAY("*")
              )
            )
          )
        );
        
        -- Policies Lear 
        SET @policiesLear := JSON_ARRAY(
          JSON_OBJECT(
            "rules", CAST(@rules as JSON),
            "target", JSON_OBJECT(
              "actions", JSON_ARRAY("GET", "POST", "PUT"),
              "resource", JSON_OBJECT(
                "type", "PATH",
                "identifiers", JSON_ARRAY("/tmf-api/party/*")
              )
            )
          )
        );
        
        -- Policies Consumer
        SET @policiesConsumer := JSON_ARRAY(
          JSON_OBJECT(
            "rules", CAST(@rules as JSON),
            "target", JSON_OBJECT(
              "actions", JSON_ARRAY("GET"),
              "resource", JSON_OBJECT(
                "type", "PATH",
                "identifiers", JSON_ARRAY("/tmf-api/party/*")
              )
            )
          ),
          JSON_OBJECT(
            "rules", CAST(@rules as JSON),
            "target", JSON_OBJECT(
              "actions", JSON_ARRAY("GET"),
              "resource", JSON_OBJECT(
                "type", "PATH",
                "identifiers", JSON_ARRAY("/tmf-api/productCatalogManagement/*")
              )
            )
          ),
          JSON_OBJECT(
            "rules", CAST(@rules as JSON),
            "target", JSON_OBJECT(
              "actions", JSON_ARRAY("GET","POST","PUT"),
              "resource", JSON_OBJECT(
                "type", "PATH",
                "identifiers", JSON_ARRAY("/tmf-api/productOrderingManagement/*")
              )
            )
          )
        );
        
        -- Policies Provider
        SET @policiesProvider := JSON_ARRAY(
          JSON_OBJECT(
            "rules", CAST(@rules as JSON),
            "target", JSON_OBJECT(
              "actions", JSON_ARRAY("GET","POST"),
              "resource", JSON_OBJECT(
                "type", "PATH",
                "identifiers", JSON_ARRAY("/tmf-api/party/*")
              )
            )
          ),
          JSON_OBJECT(
            "rules", CAST(@rules as JSON),
            "target", JSON_OBJECT(
              "actions", JSON_ARRAY("GET","POST","PUT","DELETE"),
              "resource", JSON_OBJECT(
                "type", "PATH",
                "identifiers", JSON_ARRAY("/tmf-api/customerBillManagement/*")
              )
            )
          ),
          JSON_OBJECT(
            "rules", CAST(@rules as JSON),
            "target", JSON_OBJECT(
              "actions", JSON_ARRAY("GET","POST","PUT","DELETE"),
              "resource", JSON_OBJECT(
                "type", "PATH",
                "identifiers", JSON_ARRAY("/tmf-api/customerManagement/*")
              )
            )
          ),
          JSON_OBJECT(
            "rules", CAST(@rules as JSON),
            "target", JSON_OBJECT(
              "actions", JSON_ARRAY("GET","POST","PUT","DELETE"),
              "resource", JSON_OBJECT(
                "type", "PATH",
                "identifiers", JSON_ARRAY("/tmf-api/productCatalogManagement/*")
              )
            )
          ),
          JSON_OBJECT(
            "rules", CAST(@rules as JSON),
            "target", JSON_OBJECT(
              "actions", JSON_ARRAY("GET","POST","PUT","DELETE"),
              "resource", JSON_OBJECT(
                "type", "PATH",
                "identifiers", JSON_ARRAY("/tmf-api/productInventory/*")
              )
            )
          ),
          JSON_OBJECT(
            "rules", CAST(@rules as JSON),
            "target", JSON_OBJECT(
              "actions", JSON_ARRAY("GET","POST","PUT","DELETE"),
              "resource", JSON_OBJECT(
                "type", "PATH",
                "identifiers", JSON_ARRAY("/tmf-api/productOrderingManagement/*")
              )
            )
          ),
          JSON_OBJECT(
            "rules", CAST(@rules as JSON),
            "target", JSON_OBJECT(
              "actions", JSON_ARRAY("GET","POST","PUT","DELETE"),
              "resource", JSON_OBJECT(
                "type", "PATH",
                "identifiers", JSON_ARRAY("/tmf-api/resourceCatalog/*")
              )
            )
          ),
          JSON_OBJECT(
            "rules", CAST(@rules as JSON),
            "target", JSON_OBJECT(
              "actions", JSON_ARRAY("GET","POST","PUT","DELETE"),
              "resource", JSON_OBJECT(
                "type", "PATH",
                "identifiers", JSON_ARRAY("/tmf-api/resourceFunctionActivation/*")
              )
            )
          ),
          JSON_OBJECT(
            "rules", CAST(@rules as JSON),
            "target", JSON_OBJECT(
              "actions", JSON_ARRAY("GET","POST","PUT","DELETE"),
              "resource", JSON_OBJECT(
                "type", "PATH",
                "identifiers", JSON_ARRAY("/tmf-api/resourceInventoryManagement/*")
              )
            )
          ),
          JSON_OBJECT(
            "rules", CAST(@rules as JSON),
            "target", JSON_OBJECT(
              "actions", JSON_ARRAY("GET","POST","PUT","DELETE"),
              "resource", JSON_OBJECT(
                "type", "PATH",
                "identifiers", JSON_ARRAY("/tmf-api/serviceCatalogManagement/*")
              )
            )
          )
        );
        
        
        -- Policies Standard
        SET @policiesStandard := JSON_ARRAY(
          JSON_OBJECT(
            "rules", CAST(@rules as JSON),
            "target", JSON_OBJECT(
              "actions", JSON_ARRAY("GET"),
              "resource", JSON_OBJECT(
                "type", "DELIVERYORDER",
                "attributes", JSON_ARRAY("*"),
                "identifiers", JSON_ARRAY("*")
              )
            )
          )
        );
        
        -- Insert Delegation Evidence Gold VC
        SET @delegationGoldVC := JSON_OBJECT(
          "target", JSON_OBJECT(
            "accessSubject", @subjectGold
          ),
          "notBefore", 1616583866,
          "notOnOrAfter", 1735817171,
          "policyIssuer", "did:key:z6MkigCEnopwujz8Ten2dzq91nvMjqbKQYcifuZhqBsEkH7g",
          "policySets", JSON_ARRAY(
            JSON_OBJECT(
              "target", JSON_OBJECT(
                "environment", JSON_OBJECT(
                  "licenses", JSON_ARRAY("ISHARE.0001")
                )
              ),
              "policies", CAST(@policiesGold as JSON)
            )
          )
        );
        INSERT IGNORE INTO delegation_evidence (policy_issuer, access_subject,policy) VALUES ("did:key:z6MkigCEnopwujz8Ten2dzq91nvMjqbKQYcifuZhqBsEkH7g", @subjectGold, @delegationGoldVC);
        
        -- Insert Delegation Evidence Provider VC
        SET @delegationProviderVC := JSON_OBJECT(
          "target", JSON_OBJECT(
            "accessSubject", @subjectProvider
          ),
          "notBefore", 1616583866,
          "notOnOrAfter", 1735817171,
          "policyIssuer", "did:key:z6MkigCEnopwujz8Ten2dzq91nvMjqbKQYcifuZhqBsEkH7g",
          "policySets", JSON_ARRAY(
            JSON_OBJECT(
              "target", JSON_OBJECT(
                "environment", JSON_OBJECT(
                  "licenses", JSON_ARRAY("ISHARE.0001")
                )
              ),
              "policies", CAST(@policiesProvider as JSON)
            )
          )
        );
        INSERT IGNORE INTO delegation_evidence (policy_issuer, access_subject,policy) VALUES ("did:key:z6MkigCEnopwujz8Ten2dzq91nvMjqbKQYcifuZhqBsEkH7g", @subjectProvider, @delegationProviderVC);
        
        -- Insert Delegation Evidence Lear VC
        SET @delegationLearVC := JSON_OBJECT(
          "target", JSON_OBJECT(
            "accessSubject", @subjectlear
          ),
          "notBefore", 1616583866,
          "notOnOrAfter", 1735817171,
          "policyIssuer", "did:key:z6MkigCEnopwujz8Ten2dzq91nvMjqbKQYcifuZhqBsEkH7g",
          "policySets", JSON_ARRAY(
            JSON_OBJECT(
              "target", JSON_OBJECT(
                "environment", JSON_OBJECT(
                  "licenses", JSON_ARRAY("ISHARE.0001")
                )
              ),
              "policies", CAST(@policiesLear as JSON)
            )
          )
        );
        INSERT IGNORE INTO delegation_evidence (policy_issuer, access_subject,policy) VALUES ("did:key:z6MkigCEnopwujz8Ten2dzq91nvMjqbKQYcifuZhqBsEkH7g", @subjectLear, @delegationLearVC);
        
        
        
        -- Insert Delegation Evidence Consumer VC
        SET @delegationConsumerVC := JSON_OBJECT(
          "target", JSON_OBJECT(
            "accessSubject", @subjectConsumer
          ),
          "notBefore", 1616583866,
          "notOnOrAfter", 1735817171,
          "policyIssuer", "did:key:z6MkigCEnopwujz8Ten2dzq91nvMjqbKQYcifuZhqBsEkH7g",
          "policySets", JSON_ARRAY(
            JSON_OBJECT(
              "target", JSON_OBJECT(
                "environment", JSON_OBJECT(
                  "licenses", JSON_ARRAY("ISHARE.0001")
                )
              ),
              "policies", CAST(@policiesConsumer as JSON)
            )
          )
        );
        INSERT IGNORE INTO delegation_evidence (policy_issuer, access_subject,policy) VALUES ("did:key:z6MkigCEnopwujz8Ten2dzq91nvMjqbKQYcifuZhqBsEkH7g", @subjectConsumer, @delegationConsumerVC);
        
        -- Insert Delegation Evidence Standard VC
        SET @delegationStandardVC := JSON_OBJECT(
          "target", JSON_OBJECT(
            "accessSubject", @subjectStandard
          ),
          "notBefore", 1616583866,
          "notOnOrAfter", 1735817171,
          "policyIssuer", "did:key:z6MkigCEnopwujz8Ten2dzq91nvMjqbKQYcifuZhqBsEkH7g",
          "policySets", JSON_ARRAY(
            JSON_OBJECT(
              "target", JSON_OBJECT(
                "environment", JSON_OBJECT(
                  "licenses", JSON_ARRAY("ISHARE.0001")
                )
              ),
              "policies", CAST(@policiesStandard as JSON)
            )
          )
        );
        INSERT IGNORE INTO delegation_evidence (policy_issuer, access_subject,policy) VALUES ("did:key:z6MkigCEnopwujz8Ten2dzq91nvMjqbKQYcifuZhqBsEkH7g", @subjectStandard, @delegationStandardVC);
        
        COMMIT;
        EOF